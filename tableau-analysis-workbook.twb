<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='kaggle-travel-dataset-cleaned' inline='true' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='kaggle-travel-dataset-cleaned' name='textscan.1c1vqap09o3fkc1e6pqmu1vggh0k'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/jatas/Documents/Programming-Coding/git-repositories/tableau-travel-analysis/kaggle-travel-dataset-cleaned.csv' dataRefreshTime='' directory='C:/Users/jatas/Documents/Programming-Coding/git-repositories/tableau-travel-analysis' filename='C:/Users/jatas/AppData/Local/Temp/TableauTemp/0a5htma0ydskqg137nz7l1g3bfxt/kaggle-travel-dataset-cleaned.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1c1vqap09o3fkc1e6pqmu1vggh0k' name='kaggle-travel-dataset-cleaned.csv' table='[kaggle-travel-dataset-cle#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:M138:no:A1:M138:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Trip ID' ordinal='0' />
            <column datatype='string' name='Destination' ordinal='1' />
            <column datatype='date' name='Start date' ordinal='2' />
            <column datatype='date' name='End date' ordinal='3' />
            <column datatype='integer' name='Duration (days)' ordinal='4' />
            <column datatype='string' name='Traveler name' ordinal='5' />
            <column datatype='integer' name='Traveler age' ordinal='6' />
            <column datatype='string' name='Traveler gender' ordinal='7' />
            <column datatype='string' name='Traveler nationality' ordinal='8' />
            <column datatype='string' name='Accommodation type' ordinal='9' />
            <column datatype='real' name='Accommodation cost' ordinal='10' />
            <column datatype='string' name='Transportation type' ordinal='11' />
            <column datatype='real' name='Transportation cost' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1c1vqap09o3fkc1e6pqmu1vggh0k' name='kaggle-travel-dataset-cleaned.csv' table='[kaggle-travel-dataset-cle#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:M138:no:A1:M138:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Trip ID' ordinal='0' />
            <column datatype='string' name='Destination' ordinal='1' />
            <column datatype='date' name='Start date' ordinal='2' />
            <column datatype='date' name='End date' ordinal='3' />
            <column datatype='integer' name='Duration (days)' ordinal='4' />
            <column datatype='string' name='Traveler name' ordinal='5' />
            <column datatype='integer' name='Traveler age' ordinal='6' />
            <column datatype='string' name='Traveler gender' ordinal='7' />
            <column datatype='string' name='Traveler nationality' ordinal='8' />
            <column datatype='string' name='Accommodation type' ordinal='9' />
            <column datatype='real' name='Accommodation cost' ordinal='10' />
            <column datatype='string' name='Transportation type' ordinal='11' />
            <column datatype='real' name='Transportation cost' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M138:no:A1:M138:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>958</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trip ID]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Trip ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Destination</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start date]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Start date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End date]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>End date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration (days)]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Duration (days)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveler name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveler name]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Traveler name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveler age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Traveler age]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Traveler age</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveler gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveler gender]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Traveler gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveler nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveler nationality]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Traveler nationality</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accommodation type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Accommodation type]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Accommodation type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accommodation cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Accommodation cost]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Accommodation cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Transportation type]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Transportation type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transportation cost]</local-name>
            <parent-name>[kaggle-travel-dataset-cleaned.csv]</parent-name>
            <remote-alias>Transportation cost</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Accommodation type]' role='dimension' type='nominal' />
      <column caption='Rounded Avg. Age' datatype='real' name='[Calculation_705376352131833856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(AVG([Traveler age]), 1)' />
      </column>
      <column caption='Rounded Avg. Trip Duration' datatype='real' name='[Calculation_705376352131993601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(AVG([Duration (days)]), 1)' />
      </column>
      <column caption='Rounded Avg. Accomodation Cost' datatype='real' name='[Calculation_705376352133427202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(AVG([Accommodation cost]), 0)' />
      </column>
      <column caption='Rounded Avg. Transportation cost' datatype='real' name='[Calculation_705376352133496835]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(AVG([Transportation cost]), 0)' />
      </column>
      <column caption='Total Spent' datatype='integer' name='[Calculation_705376352139984900]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Accommodation cost]+[Transportation cost]' />
      </column>
      <column datatype='string' name='[Destination]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Amsterdam, Netherlands&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;Athens, Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Auckland, New Zealand&quot;' value='&quot;New Zealand&quot;' />
          <semantic-value key='&quot;Bali, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Bangkok, Thailand&quot;' value='&quot;Thailand&quot;' />
          <semantic-value key='&quot;Barcelona, Spain&quot;' value='&quot;Spain&quot;' />
          <semantic-value key='&quot;Berlin, Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Cancun, Mexico&quot;' value='&quot;Mexico&quot;' />
          <semantic-value key='&quot;Cape Town, South Africa&quot;' value='&quot;South Africa&quot;' />
          <semantic-value key='&quot;Dubai, United Arab Emirates&quot;' value='&quot;United Arab Emirates&quot;' />
          <semantic-value key='&quot;Edinburgh, Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Honolulu, Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;London, UK&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Los Angeles, USA&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Marrakech, Morocco&quot;' value='&quot;Morocco&quot;' />
          <semantic-value key='&quot;New York City, USA&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;New York, USA&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Paris, France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Phnom Penh, Cambodia&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;Phuket, Thailand&quot;' value='&quot;Thailand&quot;' />
          <semantic-value key='&quot;Rio de Janeiro, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Rome, Italy&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;Santorini, Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Seoul, South Korea&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Sydney, Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Tokyo, Japan&quot;' value='&quot;Japan&quot;' />
          <semantic-value key='&quot;Vancouver, Canada&quot;' value='&quot;Canada&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Start date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Traveler gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[Traveler nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Trip ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='kaggle-travel-dataset-cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]' role='measure' type='quantitative' />
      <column-instance column='[Accommodation type]' derivation='Attribute' name='[attr:Accommodation type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Accommodation type]' derivation='None' name='[none:Accommodation type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Destination]' derivation='None' name='[none:Destination:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveler gender]' derivation='None' name='[none:Traveler gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Start date]' derivation='Year-Trunc' name='[tyr:Start date:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/jatas/AppData/Local/Temp/TableauTemp/#TableauTemp_1t3mr2217kwit71gm95cs1b0zv3v.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/11/2024 01:26:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Trip ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Trip ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip ID</remote-alias>
              <ordinal>0</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Destination</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Destination]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Destination</remote-alias>
              <ordinal>1</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Start date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Start date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Start date</remote-alias>
              <ordinal>2</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>End date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[End date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>End date</remote-alias>
              <ordinal>3</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Duration (days)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Duration (days)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Duration (days)</remote-alias>
              <ordinal>4</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveler name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveler name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Traveler name</remote-alias>
              <ordinal>5</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveler age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveler age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Traveler age</remote-alias>
              <ordinal>6</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveler gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveler gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Traveler gender</remote-alias>
              <ordinal>7</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveler nationality</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveler nationality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Traveler nationality</remote-alias>
              <ordinal>8</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Accommodation type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Accommodation type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Accommodation type</remote-alias>
              <ordinal>9</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Accommodation cost</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Accommodation cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Accommodation cost</remote-alias>
              <ordinal>10</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transportation type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Transportation type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transportation type</remote-alias>
              <ordinal>11</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transportation cost</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Transportation cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transportation cost</remote-alias>
              <ordinal>12</ordinal>
              <family>kaggle-travel-dataset-cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='200' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tyr:Start date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2025-01-01 00:00:00#</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2022-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Accommodation type:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;Airbnb&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Hotel&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;Guesthouse&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Hostel&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Villa&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Resort&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Riad&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Vacation rental&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveler gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Destination:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cape Town, South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sydney, Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam, Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bali, Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;London, UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubai, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokyo, Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paris, France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vancouver, Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phuket, Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athens, Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangkok, Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santorini, Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berlin, Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rio de Janeiro, Brazil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Los Angeles, USA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marrakech, Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Phnom Penh, Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edinburgh, Scotland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rome, Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Auckland, New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barcelona, Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seoul, South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City, USA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honolulu, Hawaii&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cancun, Mexico&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Accommodation type:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;Airbnb&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Hotel&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;Guesthouse&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Hostel&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Villa&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Resort&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Riad&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Vacation rental&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='kaggle-travel-dataset-cleaned.csv' id='kaggle-travel-dataset-cleaned.csv_625BB4B9285745E5AF93CE55F00ED8CB'>
            <properties context=''>
              <relation connection='textscan.1c1vqap09o3fkc1e6pqmu1vggh0k' name='kaggle-travel-dataset-cleaned.csv' table='[kaggle-travel-dataset-cle#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:M138:no:A1:M138:1' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Trip ID' ordinal='0' />
                  <column datatype='string' name='Destination' ordinal='1' />
                  <column datatype='date' name='Start date' ordinal='2' />
                  <column datatype='date' name='End date' ordinal='3' />
                  <column datatype='integer' name='Duration (days)' ordinal='4' />
                  <column datatype='string' name='Traveler name' ordinal='5' />
                  <column datatype='integer' name='Traveler age' ordinal='6' />
                  <column datatype='string' name='Traveler gender' ordinal='7' />
                  <column datatype='string' name='Traveler nationality' ordinal='8' />
                  <column datatype='string' name='Accommodation type' ordinal='9' />
                  <column datatype='real' name='Accommodation cost' ordinal='10' />
                  <column datatype='string' name='Transportation type' ordinal='11' />
                  <column datatype='real' name='Transportation cost' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Aggregated by Traveler Nationality'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Average KPIs per Traveler Nationality</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='integer' name='[Accommodation cost]' role='measure' type='quantitative' />
            <column caption='Rounded Avg. Age' datatype='real' name='[Calculation_705376352131833856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(AVG([Traveler age]), 1)' />
            </column>
            <column caption='Rounded Avg. Trip Duration' datatype='real' name='[Calculation_705376352131993601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(AVG([Duration (days)]), 1)' />
            </column>
            <column caption='Rounded Avg. Accomodation Cost' datatype='real' name='[Calculation_705376352133427202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(AVG([Accommodation cost]), 0)' />
            </column>
            <column caption='Rounded Avg. Transportation cost' datatype='real' name='[Calculation_705376352133496835]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(AVG([Transportation cost]), 0)' />
            </column>
            <column datatype='integer' name='[Duration (days)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Transportation cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Traveler age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Traveler nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Traveler nationality]' derivation='None' name='[none:Traveler nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_705376352131833856]' derivation='User' name='[usr:Calculation_705376352131833856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705376352131993601]' derivation='User' name='[usr:Calculation_705376352131993601:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705376352133427202]' derivation='User' name='[usr:Calculation_705376352133427202:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705376352133496835]' derivation='User' name='[usr:Calculation_705376352133496835:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler nationality:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Traveler nationality:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Traveler nationality:nk]' member='&quot;New Zealand&quot;' />
                <groupfilter function='member' level='[none:Traveler nationality:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler nationality:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Longitude (generated)]' field-type='quantitative' max='53839113.424356923' min='26197569.51088243' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Latitude (generated)]' field-type='quantitative' max='14630235.989556573' min='-8785848.9187664893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131833856:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131993601:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133496835:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' num-steps='5' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' value='Average Accomodation Spending'>
              <formatted-text>
                <run>Average Accomodation Spending</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler nationality:nk]' />
              <color column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' />
              <lod column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133496835:qk]' />
              <lod column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131833856:qk]' />
              <lod column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131993601:qk]' />
              <geometry column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontname='tableau Bold' fontsize='11'>Averages for Travelers from </run>
                <run bold='true' fontname='tableau Bold' fontsize='11' underline='true'><![CDATA[<[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler nationality:nk]>:]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Accomodation Cost:&#9;</run>
                <run bold='true'><![CDATA[<[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Transportation Cost:&#9;</run>
                <run bold='true'><![CDATA[<[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133496835:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trip Duration:&#9;</run>
                <run bold='true'><![CDATA[<[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131993601:qk]> days]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352131833856:qk]> years old]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Latitude (generated)]</rows>
        <cols>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FC9DECE1-4182-47D9-8859-E7C694092C4B}' />
    </worksheet>
    <worksheet name='Annual Percentages of Bookings per Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Annual Percentages of Bookings per Accomodation Type</run>
            <run fontalignment='1'>&#10;&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='string' name='[Accommodation type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Trip ID]' role='dimension' type='ordinal' />
            <column-instance column='[Trip ID]' derivation='Count' name='[cnt:Trip ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accommodation type]' derivation='None' name='[none:Accommodation type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trip ID]' derivation='Count' name='[pcto:cnt:Trip ID:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Start date]' derivation='Year-Trunc' name='[tyr:Start date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Start date]' derivation='Year' name='[yr:Start date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]'>
            <groupfilter from='2021' function='range' level='[yr:Start date:ok]' to='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[pcto:cnt:Trip ID:qk:2]' value='p0%' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Accommodation type:nk]' />
              <wedge-size column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[cnt:Trip ID:qk]' />
              <text column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Accommodation type:nk]' />
              <text column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[pcto:cnt:Trip ID:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[tyr:Start date:ok]</column>
        </pages>
        <percentages enabled='true' mode='column-in-pane' />
      </table>
      <simple-id uuid='{F76E40D2-AF58-4921-BE6A-D6F8B0D5DF34}' />
    </worksheet>
    <worksheet name='Cost Per Trip'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='integer' name='[Accommodation cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Trip ID]' role='dimension' type='ordinal' />
            <column-instance column='[Trip ID]' derivation='None' name='[none:Trip ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Accommodation cost]' derivation='Sum' name='[sum:Accommodation cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Trip ID:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Accommodation cost:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Accommodation cost:qk]</rows>
        <cols>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Trip ID:ok]</cols>
      </table>
      <simple-id uuid='{04B51EDB-B778-4C91-8A39-346CEC48D580}' />
    </worksheet>
    <worksheet name='Median Trip Duration 2021-2024'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Median Trip Duration 2021-2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='integer' name='[Duration (days)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Start date]' role='dimension' type='ordinal' />
            <column-instance column='[Duration (days)]' derivation='Median' name='[med:Duration (days):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start date]' derivation='Month-Trunc' name='[tmn:Start date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start date]' derivation='Year' name='[yr:Start date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]'>
            <groupfilter from='2021' function='range' level='[yr:Start date:ok]' to='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[med:Duration (days):qk]' field-type='quantitative' max='12.0' min='5.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='solid' />
            <format attr='stroke-size' id='refline3' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[tmn:Start date:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' scope='per-pane' value-column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[tmn:Start date:qk]' z-order='1' />
            <reference-line axis-column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[med:Duration (days):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[med:Duration (days):qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[med:Duration (days):qk]</rows>
        <cols>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[tmn:Start date:qk]</cols>
      </table>
      <simple-id uuid='{161DAC24-3777-43ED-AAD6-A8CA7D3EE355}' />
    </worksheet>
    <worksheet name='Top 10 Most Visited Cities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top 10 Most Visited Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='string' name='[Destination]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Amsterdam, Netherlands&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Athens, Greece&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;Auckland, New Zealand&quot;' value='&quot;New Zealand&quot;' />
                <semantic-value key='&quot;Bali, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Bangkok, Thailand&quot;' value='&quot;Thailand&quot;' />
                <semantic-value key='&quot;Barcelona, Spain&quot;' value='&quot;Spain&quot;' />
                <semantic-value key='&quot;Berlin, Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Cancun, Mexico&quot;' value='&quot;Mexico&quot;' />
                <semantic-value key='&quot;Cape Town, South Africa&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;Dubai, United Arab Emirates&quot;' value='&quot;United Arab Emirates&quot;' />
                <semantic-value key='&quot;Edinburgh, Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Honolulu, Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;London, UK&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Los Angeles, USA&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Marrakech, Morocco&quot;' value='&quot;Morocco&quot;' />
                <semantic-value key='&quot;New York City, USA&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;New York, USA&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Paris, France&quot;' value='&quot;France&quot;' />
                <semantic-value key='&quot;Phnom Penh, Cambodia&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;Phuket, Thailand&quot;' value='&quot;Thailand&quot;' />
                <semantic-value key='&quot;Rio de Janeiro, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Rome, Italy&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;Santorini, Greece&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;Seoul, South Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Sydney, Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Tokyo, Japan&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;Vancouver, Canada&quot;' value='&quot;Canada&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Trip ID]' role='dimension' type='ordinal' />
            <column-instance column='[Trip ID]' derivation='Count' name='[cnt:Trip ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Destination]' derivation='None' name='[none:Destination:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Destination:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Trip ID])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Destination:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Australia&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Brazil&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Canada&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Egypt&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;France&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Greece&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Hawaii&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Italy&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Japan&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Mexico&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;New York, USA&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Spain&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='&quot;Thailand&quot;' />
                    <groupfilter function='member' level='[none:Destination:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Destination:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Destination:nk]' />
              <text column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Destination:nk]' />
              <size column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[cnt:Trip ID:qk]' />
              <text column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[cnt:Trip ID:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B03E498-EF20-419C-893F-EBC0491399CD}' />
    </worksheet>
    <worksheet name='Total Spending per Gender by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='kaggle-travel-dataset-cleaned' name='federated.134rbnq1j3pisx0zuxs5z0iulkj2' />
          </datasources>
          <datasource-dependencies datasource='federated.134rbnq1j3pisx0zuxs5z0iulkj2'>
            <column datatype='integer' name='[Accommodation cost]' role='measure' type='quantitative' />
            <column caption='Total Spent' datatype='integer' name='[Calculation_705376352139984900]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Accommodation cost]+[Transportation cost]' />
            </column>
            <column datatype='date' name='[Start date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Transportation cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Traveler gender]' role='dimension' type='nominal' />
            <column-instance column='[Traveler gender]' derivation='None' name='[none:Traveler gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_705376352139984900]' derivation='Sum' name='[sum:Calculation_705376352139984900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start date]' derivation='Year' name='[yr:Start date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]'>
            <groupfilter from='2021' function='range' level='[yr:Start date:ok]' to='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Calculation_705376352139984900:qk]' scope='rows' value='Total Spent (in USD)' />
            <format attr='auto-subtitle' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Calculation_705376352139984900:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Calculation_705376352139984900:qk]' scope='rows' value='Accomodations and Transportation' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Calculation_705376352139984900:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[sum:Calculation_705376352139984900:qk]</rows>
        <cols>([federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok] / [federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler gender:nk])</cols>
      </table>
      <simple-id uuid='{3AC065B1-5E55-445D-9039-5CF73EC2317E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard Overview'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='41' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='97856' id='39' type-v2='layout-basic' w='99002' x='499' y='1072'>
              <zone h='97856' id='34' param='horz' type-v2='layout-flow' w='49501' x='499' y='1072'>
                <zone h='97856' id='19' type-v2='layout-basic' w='49501' x='499' y='1072'>
                  <zone h='97856' id='17' param='horz' type-v2='layout-flow' w='49501' x='499' y='1072'>
                    <zone h='97856' id='9' type-v2='layout-basic' w='49501' x='499' y='1072'>
                      <zone h='97856' id='7' param='horz' type-v2='layout-flow' w='49501' x='499' y='1072'>
                        <zone h='97856' id='5' type-v2='layout-basic' w='49501' x='499' y='1072'>
                          <zone h='52414' id='32' name='Annual Percentages of Bookings per Type' w='49501' x='499' y='46514'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='45442' id='37' name='Total Spending per Gender by Year' w='49501' x='499' y='1072'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='97856' id='38' name='Aggregated by Traveler Nationality' w='49501' x='50000' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7373' id='36' name='Annual Percentages of Bookings per Type' show-title='false' slider='0' synchronized='1' trailctrls='0' type-v2='currpage' w='12219' x='34726' y='54155' />
        <zone h='13405' id='42' name='Aggregated by Traveler Nationality' pane-specification-id='1' param='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' type-v2='color' w='8728' x='85474' y='82708' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='51' param='vert' type-v2='layout-flow' w='99002' x='499' y='1072'>
                <zone fixed-size='280' h='45442' id='37' is-fixed='true' name='Total Spending per Gender by Year' w='49501' x='499' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97856' id='38' is-fixed='true' name='Aggregated by Traveler Nationality' w='49501' x='50000' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13405' id='42' name='Aggregated by Traveler Nationality' pane-specification-id='1' param='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' type-v2='color' w='8728' x='85474' y='82708'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52414' id='32' is-fixed='true' name='Annual Percentages of Bookings per Type' w='49501' x='499' y='46514'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7373' id='36' name='Annual Percentages of Bookings per Type' show-title='false' slider='0' synchronized='1' trailctrls='0' type-v2='currpage' w='12219' x='34726' y='54155'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{87EBA5E8-A24B-4A37-874C-8D5AEEB46AE0}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='9' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='6017' id='10' type-v2='title' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92323' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='6847'>
              <zone h='92323' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='6847'>
                <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6847' />
                <zone h='81846' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='17324'>
                  <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='Dashboard Overview' captured-sheet='Dashboard Overview' id='1'>
                        <currentDeltas>
                          <worksheet name='Aggregated by Traveler Nationality'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Latitude (generated)]' field-type='quantitative' max='15639727.234847091' min='-17571313.933726519' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Longitude (generated)]' field-type='quantitative' max='71672325.289702252' min='47622950.254954614' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <worksheet name='Annual Percentages of Bookings per Type'>
                            <current-page>
                              <multibucket>
                                <bucket>#2022-01-01 00:00:00#</bucket>
                              </multibucket>
                            </current-page>
                          </worksheet>
                        </currentDeltas>
                        <capturedDeltas>
                          <worksheet name='Aggregated by Traveler Nationality'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Latitude (generated)]' field-type='quantitative' max='18437606.503918614' min='-20551198.006008625' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[Longitude (generated)]' field-type='quantitative' max='55977609.061208516' min='28078953.537472978' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Top 10 Most Visited Cities' captured-sheet='Top 10 Most Visited Cities' id='2' />
                      <story-point caption='Median Trip Duration Trend' captured-sheet='Median Trip Duration 2021-2024' id='3' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{00CEE28E-D33F-4A55-BFD7-FC3216C73A78}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' name='Dashboard Overview'>
      <viewpoints>
        <viewpoint name='Aggregated by Traveler Nationality'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Annual Percentages of Bookings per Type'>
          <current-page>
            <multibucket>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Spending per Gender by Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='38' />
      <simple-id uuid='{D0398ACC-4DE6-4F29-B8C7-D0E3453D1AB3}' />
    </window>
    <window class='dashboard' name='Story'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{CE2684A8-44D9-4FA6-81E7-38F3836E33EC}' />
    </window>
    <window class='worksheet' maximized='true' name='Aggregated by Traveler Nationality'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[usr:Calculation_705376352133427202:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[avg:Accommodation cost:qk]</field>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Traveler nationality:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A3385AFC-87C1-424C-B508-E36B458B046C}' />
    </window>
    <window class='worksheet' name='Total Spending per Gender by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{0E228D1F-A7D5-4B97-B3EA-47D226400489}' />
    </window>
    <window class='worksheet' name='Annual Percentages of Bookings per Type'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Accommodation type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Accommodation type:nk]</field>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Trip ID:ok]</field>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8A085D8-785E-4D3D-824C-C92AC0D3679B}' />
    </window>
    <window class='worksheet' name='Top 10 Most Visited Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Destination:nk]</field>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Trip ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE794133-D711-43FE-9B8B-0808AD12FD9A}' />
    </window>
    <window class='worksheet' name='Median Trip Duration 2021-2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[yr:Start date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F0C48E-7574-4094-847D-E72BCDB9F700}' />
    </window>
    <window class='worksheet' name='Cost Per Trip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.134rbnq1j3pisx0zuxs5z0iulkj2].[none:Trip ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91D3B343-D8C1-4285-B45F-18FBCDC3BCCD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Aggregated by Traveler Nationality' width='192'>
      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
      DnBWMv8Pzg7v6np0vBcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Annual Percentages of Bookings per Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cost Per Trip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Trip Duration 2021-2024' width='192'>
      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
      aXgl7o9G/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      17nejq4BxDSdAolpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhp/w2cw99lcH/dLQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Most Visited Cities' width='192'>
      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
      09KYXttfAckAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Spending per Gender by Year' width='192'>
      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
      AU+Q4EzY9BuuAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
